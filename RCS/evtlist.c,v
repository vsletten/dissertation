head	1.3;
access;
symbols;
locks
	sletten:1.3; strict;
comment	@ * @;


1.3
date	99.07.20.18.13.35;	author sletten;	state Exp;
branches;
next	1.2;

1.2
date	98.08.06.00.56.38;	author sletten;	state Exp;
branches;
next	1.1;

1.1
date	98.06.25.03.28.13;	author sletten;	state Exp;
branches;
next	;


desc
@working baseline
@


1.3
log
@Fixed bug related to desorption environment
@
text
@#include <stdlib.h>
#include <stdio.h>
#include "common.h"
#include "evtlist.h"
#include "envrn.h"
#include "myerr.h"
#include "rxnlist.h"

eventList new_evtList(Lattice l, reactionList rl, int nsites)
{
  eventList el = NULL;
  struct event *e;
  int s, i, env, lo, hi;
  char msg[100];

  for (s = 0; s < nsites; s++) {   /* build event list */
    if ((l[s].state % 100 == 0) && l[s].state > 200) {
      continue;
    } else if (l[s].state > 500) {
      lo = N400; hi = NHYD;
    } else if (l[s].state > 400) {
      lo = N300; hi = N400;
    } else if (l[s].state > 300) {
      lo = 0; hi = N300;
    } else {
      lo = NHYD; hi = NRXN;
    }
    for (i = lo; i < hi; i++) {
      if (l[s].state == rl[i].reactant   /* matches reactant and is active? */
	  && isActive(s, l, i)) {
	if (!(e = (struct event *) malloc (sizeof(struct event))))
	  die("malloc failed");
	e->next = el;
	e->site = s;
	e->rxn = i;
	env = checkEnv(l, s);
	if (env < 0 || env >= rl[i].nrates) {
	  sprintf(msg, "invalid environment: site %d state %d env %d nrates %d"
                  , s, l[s].state, env, rl[i].nrates);
	  die(msg);
	}
	e->rate = rl[i].rate[env];
	el = e;
      }
    }
  }
  return el;
}



void free_evtList(eventList el)
{
  struct event *e;

  while(el) {
    e = el->next;
    free(el);
    el = e;
  }
}




@


1.2
log
@*** empty log message ***
@
text
@d37 3
a39 3
	if (env < 0) {
	  sprintf(msg, "invalid environment: site %d state %d env %d", s, 
		  l[s].state, env);
@


1.1
log
@Initial revision
@
text
@d13 2
a14 1
  int s, i, env;
d17 13
a29 2
    for (i = 0; i < NRXN; i++) {
      if (l[s].state == rl[i].reactant 
d37 5
a41 2
	if (env < 0)
	  die("invalid environment");
@
